import 'package:tdlib_ffi_poc/api/objects.dart';
import 'package:tdlib_ffi_poc/api/basics.dart';
import 'package:tdlib_ffi_poc/api/utils.dart';

dynamic convertToTdObject(dynamic obj) {
  if (!(obj is Map<String, dynamic>) || !obj.containsKey("@type"))
    return obj;

  var objTypeName = obj["@type"];
  switch (objTypeName) {
    case 'error':
      return Error.fromJson(obj);
    case 'ok':
      return Ok.fromJson(obj);
    case 'tdlibParameters':
      return TdlibParameters.fromJson(obj);

    case 'authenticationCodeTypeTelegramMessage':
      return AuthenticationCodeTypeTelegramMessage.fromJson(obj);
    case 'authenticationCodeTypeSms':
      return AuthenticationCodeTypeSms.fromJson(obj);
    case 'authenticationCodeTypeCall':
      return AuthenticationCodeTypeCall.fromJson(obj);
    case 'authenticationCodeTypeFlashCall':
      return AuthenticationCodeTypeFlashCall.fromJson(obj);
    case 'authenticationCodeInfo':
      return AuthenticationCodeInfo.fromJson(obj);
    case 'emailAddressAuthenticationCodeInfo':
      return EmailAddressAuthenticationCodeInfo.fromJson(obj);
    case 'textEntity':
      return TextEntity.fromJson(obj);
    case 'textEntities':
      return TextEntities.fromJson(obj);
    case 'formattedText':
      return FormattedText.fromJson(obj);
    case 'termsOfService':
      return TermsOfService.fromJson(obj);

    case 'authorizationStateWaitTdlibParameters':
      return AuthorizationStateWaitTdlibParameters.fromJson(obj);
    case 'authorizationStateWaitEncryptionKey':
      return AuthorizationStateWaitEncryptionKey.fromJson(obj);
    case 'authorizationStateWaitPhoneNumber':
      return AuthorizationStateWaitPhoneNumber.fromJson(obj);
    case 'authorizationStateWaitCode':
      return AuthorizationStateWaitCode.fromJson(obj);
    case 'authorizationStateWaitOtherDeviceConfirmation':
      return AuthorizationStateWaitOtherDeviceConfirmation.fromJson(obj);
    case 'authorizationStateWaitRegistration':
      return AuthorizationStateWaitRegistration.fromJson(obj);
    case 'authorizationStateWaitPassword':
      return AuthorizationStateWaitPassword.fromJson(obj);
    case 'authorizationStateReady':
      return AuthorizationStateReady.fromJson(obj);
    case 'authorizationStateLoggingOut':
      return AuthorizationStateLoggingOut.fromJson(obj);
    case 'authorizationStateClosing':
      return AuthorizationStateClosing.fromJson(obj);
    case 'authorizationStateClosed':
      return AuthorizationStateClosed.fromJson(obj);
    case 'passwordState':
      return PasswordState.fromJson(obj);
    case 'recoveryEmailAddress':
      return RecoveryEmailAddress.fromJson(obj);
    case 'temporaryPasswordState':
      return TemporaryPasswordState.fromJson(obj);
    case 'localFile':
      return LocalFile.fromJson(obj);
    case 'remoteFile':
      return RemoteFile.fromJson(obj);
    case 'file':
      return File.fromJson(obj);

    case 'inputFileId':
      return InputFileId.fromJson(obj);
    case 'inputFileRemote':
      return InputFileRemote.fromJson(obj);
    case 'inputFileLocal':
      return InputFileLocal.fromJson(obj);
    case 'inputFileGenerated':
      return InputFileGenerated.fromJson(obj);
    case 'photoSize':
      return PhotoSize.fromJson(obj);
    case 'minithumbnail':
      return Minithumbnail.fromJson(obj);

    case 'thumbnailFormatJpeg':
      return ThumbnailFormatJpeg.fromJson(obj);
    case 'thumbnailFormatPng':
      return ThumbnailFormatPng.fromJson(obj);
    case 'thumbnailFormatWebp':
      return ThumbnailFormatWebp.fromJson(obj);
    case 'thumbnailFormatGif':
      return ThumbnailFormatGif.fromJson(obj);
    case 'thumbnailFormatTgs':
      return ThumbnailFormatTgs.fromJson(obj);
    case 'thumbnailFormatMpeg4':
      return ThumbnailFormatMpeg4.fromJson(obj);
    case 'thumbnail':
      return Thumbnail.fromJson(obj);

    case 'maskPointForehead':
      return MaskPointForehead.fromJson(obj);
    case 'maskPointEyes':
      return MaskPointEyes.fromJson(obj);
    case 'maskPointMouth':
      return MaskPointMouth.fromJson(obj);
    case 'maskPointChin':
      return MaskPointChin.fromJson(obj);
    case 'maskPosition':
      return MaskPosition.fromJson(obj);
    case 'closedVectorPath':
      return ClosedVectorPath.fromJson(obj);
    case 'pollOption':
      return PollOption.fromJson(obj);

    case 'pollTypeRegular':
      return PollTypeRegular.fromJson(obj);
    case 'pollTypeQuiz':
      return PollTypeQuiz.fromJson(obj);
    case 'animation':
      return Animation.fromJson(obj);
    case 'audio':
      return Audio.fromJson(obj);
    case 'document':
      return Document.fromJson(obj);
    case 'photo':
      return Photo.fromJson(obj);
    case 'sticker':
      return Sticker.fromJson(obj);
    case 'video':
      return Video.fromJson(obj);
    case 'videoNote':
      return VideoNote.fromJson(obj);
    case 'voiceNote':
      return VoiceNote.fromJson(obj);
    case 'contact':
      return Contact.fromJson(obj);
    case 'location':
      return Location.fromJson(obj);
    case 'venue':
      return Venue.fromJson(obj);
    case 'game':
      return Game.fromJson(obj);
    case 'poll':
      return Poll.fromJson(obj);
    case 'profilePhoto':
      return ProfilePhoto.fromJson(obj);
    case 'chatPhotoInfo':
      return ChatPhotoInfo.fromJson(obj);

    case 'userTypeRegular':
      return UserTypeRegular.fromJson(obj);
    case 'userTypeDeleted':
      return UserTypeDeleted.fromJson(obj);
    case 'userTypeBot':
      return UserTypeBot.fromJson(obj);
    case 'userTypeUnknown':
      return UserTypeUnknown.fromJson(obj);
    case 'botCommand':
      return BotCommand.fromJson(obj);
    case 'botCommands':
      return BotCommands.fromJson(obj);
    case 'chatLocation':
      return ChatLocation.fromJson(obj);
    case 'animatedChatPhoto':
      return AnimatedChatPhoto.fromJson(obj);
    case 'chatPhoto':
      return ChatPhoto.fromJson(obj);
    case 'chatPhotos':
      return ChatPhotos.fromJson(obj);

    case 'inputChatPhotoPrevious':
      return InputChatPhotoPrevious.fromJson(obj);
    case 'inputChatPhotoStatic':
      return InputChatPhotoStatic.fromJson(obj);
    case 'inputChatPhotoAnimation':
      return InputChatPhotoAnimation.fromJson(obj);
    case 'user':
      return User.fromJson(obj);
    case 'userFullInfo':
      return UserFullInfo.fromJson(obj);
    case 'users':
      return Users.fromJson(obj);
    case 'chatAdministrator':
      return ChatAdministrator.fromJson(obj);
    case 'chatAdministrators':
      return ChatAdministrators.fromJson(obj);
    case 'chatPermissions':
      return ChatPermissions.fromJson(obj);

    case 'chatMemberStatusCreator':
      return ChatMemberStatusCreator.fromJson(obj);
    case 'chatMemberStatusAdministrator':
      return ChatMemberStatusAdministrator.fromJson(obj);
    case 'chatMemberStatusMember':
      return ChatMemberStatusMember.fromJson(obj);
    case 'chatMemberStatusRestricted':
      return ChatMemberStatusRestricted.fromJson(obj);
    case 'chatMemberStatusLeft':
      return ChatMemberStatusLeft.fromJson(obj);
    case 'chatMemberStatusBanned':
      return ChatMemberStatusBanned.fromJson(obj);
    case 'chatMember':
      return ChatMember.fromJson(obj);
    case 'chatMembers':
      return ChatMembers.fromJson(obj);

    case 'chatMembersFilterContacts':
      return ChatMembersFilterContacts.fromJson(obj);
    case 'chatMembersFilterAdministrators':
      return ChatMembersFilterAdministrators.fromJson(obj);
    case 'chatMembersFilterMembers':
      return ChatMembersFilterMembers.fromJson(obj);
    case 'chatMembersFilterMention':
      return ChatMembersFilterMention.fromJson(obj);
    case 'chatMembersFilterRestricted':
      return ChatMembersFilterRestricted.fromJson(obj);
    case 'chatMembersFilterBanned':
      return ChatMembersFilterBanned.fromJson(obj);
    case 'chatMembersFilterBots':
      return ChatMembersFilterBots.fromJson(obj);

    case 'supergroupMembersFilterRecent':
      return SupergroupMembersFilterRecent.fromJson(obj);
    case 'supergroupMembersFilterContacts':
      return SupergroupMembersFilterContacts.fromJson(obj);
    case 'supergroupMembersFilterAdministrators':
      return SupergroupMembersFilterAdministrators.fromJson(obj);
    case 'supergroupMembersFilterSearch':
      return SupergroupMembersFilterSearch.fromJson(obj);
    case 'supergroupMembersFilterRestricted':
      return SupergroupMembersFilterRestricted.fromJson(obj);
    case 'supergroupMembersFilterBanned':
      return SupergroupMembersFilterBanned.fromJson(obj);
    case 'supergroupMembersFilterMention':
      return SupergroupMembersFilterMention.fromJson(obj);
    case 'supergroupMembersFilterBots':
      return SupergroupMembersFilterBots.fromJson(obj);
    case 'chatInviteLink':
      return ChatInviteLink.fromJson(obj);
    case 'chatInviteLinks':
      return ChatInviteLinks.fromJson(obj);
    case 'chatInviteLinkCount':
      return ChatInviteLinkCount.fromJson(obj);
    case 'chatInviteLinkCounts':
      return ChatInviteLinkCounts.fromJson(obj);
    case 'chatInviteLinkMember':
      return ChatInviteLinkMember.fromJson(obj);
    case 'chatInviteLinkMembers':
      return ChatInviteLinkMembers.fromJson(obj);
    case 'chatInviteLinkInfo':
      return ChatInviteLinkInfo.fromJson(obj);
    case 'basicGroup':
      return BasicGroup.fromJson(obj);
    case 'basicGroupFullInfo':
      return BasicGroupFullInfo.fromJson(obj);
    case 'supergroup':
      return Supergroup.fromJson(obj);
    case 'supergroupFullInfo':
      return SupergroupFullInfo.fromJson(obj);

    case 'secretChatStatePending':
      return SecretChatStatePending.fromJson(obj);
    case 'secretChatStateReady':
      return SecretChatStateReady.fromJson(obj);
    case 'secretChatStateClosed':
      return SecretChatStateClosed.fromJson(obj);
    case 'secretChat':
      return SecretChat.fromJson(obj);

    case 'messageSenderUser':
      return MessageSenderUser.fromJson(obj);
    case 'messageSenderChat':
      return MessageSenderChat.fromJson(obj);
    case 'messageSenders':
      return MessageSenders.fromJson(obj);

    case 'messageForwardOriginUser':
      return MessageForwardOriginUser.fromJson(obj);
    case 'messageForwardOriginChat':
      return MessageForwardOriginChat.fromJson(obj);
    case 'messageForwardOriginHiddenUser':
      return MessageForwardOriginHiddenUser.fromJson(obj);
    case 'messageForwardOriginChannel':
      return MessageForwardOriginChannel.fromJson(obj);
    case 'messageForwardOriginMessageImport':
      return MessageForwardOriginMessageImport.fromJson(obj);
    case 'messageForwardInfo':
      return MessageForwardInfo.fromJson(obj);
    case 'messageReplyInfo':
      return MessageReplyInfo.fromJson(obj);
    case 'messageInteractionInfo':
      return MessageInteractionInfo.fromJson(obj);

    case 'messageSendingStatePending':
      return MessageSendingStatePending.fromJson(obj);
    case 'messageSendingStateFailed':
      return MessageSendingStateFailed.fromJson(obj);
    case 'message':
      return Message.fromJson(obj);
    case 'messages':
      return Messages.fromJson(obj);
    case 'foundMessages':
      return FoundMessages.fromJson(obj);

    case 'notificationSettingsScopePrivateChats':
      return NotificationSettingsScopePrivateChats.fromJson(obj);
    case 'notificationSettingsScopeGroupChats':
      return NotificationSettingsScopeGroupChats.fromJson(obj);
    case 'notificationSettingsScopeChannelChats':
      return NotificationSettingsScopeChannelChats.fromJson(obj);
    case 'chatNotificationSettings':
      return ChatNotificationSettings.fromJson(obj);
    case 'scopeNotificationSettings':
      return ScopeNotificationSettings.fromJson(obj);
    case 'draftMessage':
      return DraftMessage.fromJson(obj);

    case 'chatTypePrivate':
      return ChatTypePrivate.fromJson(obj);
    case 'chatTypeBasicGroup':
      return ChatTypeBasicGroup.fromJson(obj);
    case 'chatTypeSupergroup':
      return ChatTypeSupergroup.fromJson(obj);
    case 'chatTypeSecret':
      return ChatTypeSecret.fromJson(obj);
    case 'chatFilter':
      return ChatFilter.fromJson(obj);
    case 'chatFilterInfo':
      return ChatFilterInfo.fromJson(obj);
    case 'recommendedChatFilter':
      return RecommendedChatFilter.fromJson(obj);
    case 'recommendedChatFilters':
      return RecommendedChatFilters.fromJson(obj);

    case 'chatListMain':
      return ChatListMain.fromJson(obj);
    case 'chatListArchive':
      return ChatListArchive.fromJson(obj);
    case 'chatListFilter':
      return ChatListFilter.fromJson(obj);
    case 'chatLists':
      return ChatLists.fromJson(obj);

    case 'chatSourceMtprotoProxy':
      return ChatSourceMtprotoProxy.fromJson(obj);
    case 'chatSourcePublicServiceAnnouncement':
      return ChatSourcePublicServiceAnnouncement.fromJson(obj);
    case 'chatPosition':
      return ChatPosition.fromJson(obj);
    case 'voiceChat':
      return VoiceChat.fromJson(obj);
    case 'chat':
      return Chat.fromJson(obj);
    case 'chats':
      return Chats.fromJson(obj);
    case 'chatNearby':
      return ChatNearby.fromJson(obj);
    case 'chatsNearby':
      return ChatsNearby.fromJson(obj);

    case 'publicChatTypeHasUsername':
      return PublicChatTypeHasUsername.fromJson(obj);
    case 'publicChatTypeIsLocationBased':
      return PublicChatTypeIsLocationBased.fromJson(obj);

    case 'chatActionBarReportSpam':
      return ChatActionBarReportSpam.fromJson(obj);
    case 'chatActionBarReportUnrelatedLocation':
      return ChatActionBarReportUnrelatedLocation.fromJson(obj);
    case 'chatActionBarInviteMembers':
      return ChatActionBarInviteMembers.fromJson(obj);
    case 'chatActionBarReportAddBlock':
      return ChatActionBarReportAddBlock.fromJson(obj);
    case 'chatActionBarAddContact':
      return ChatActionBarAddContact.fromJson(obj);
    case 'chatActionBarSharePhoneNumber':
      return ChatActionBarSharePhoneNumber.fromJson(obj);

    case 'keyboardButtonTypeText':
      return KeyboardButtonTypeText.fromJson(obj);
    case 'keyboardButtonTypeRequestPhoneNumber':
      return KeyboardButtonTypeRequestPhoneNumber.fromJson(obj);
    case 'keyboardButtonTypeRequestLocation':
      return KeyboardButtonTypeRequestLocation.fromJson(obj);
    case 'keyboardButtonTypeRequestPoll':
      return KeyboardButtonTypeRequestPoll.fromJson(obj);
    case 'keyboardButton':
      return KeyboardButton.fromJson(obj);

    case 'inlineKeyboardButtonTypeUrl':
      return InlineKeyboardButtonTypeUrl.fromJson(obj);
    case 'inlineKeyboardButtonTypeLoginUrl':
      return InlineKeyboardButtonTypeLoginUrl.fromJson(obj);
    case 'inlineKeyboardButtonTypeCallback':
      return InlineKeyboardButtonTypeCallback.fromJson(obj);
    case 'inlineKeyboardButtonTypeCallbackWithPassword':
      return InlineKeyboardButtonTypeCallbackWithPassword.fromJson(obj);
    case 'inlineKeyboardButtonTypeCallbackGame':
      return InlineKeyboardButtonTypeCallbackGame.fromJson(obj);
    case 'inlineKeyboardButtonTypeSwitchInline':
      return InlineKeyboardButtonTypeSwitchInline.fromJson(obj);
    case 'inlineKeyboardButtonTypeBuy':
      return InlineKeyboardButtonTypeBuy.fromJson(obj);
    case 'inlineKeyboardButton':
      return InlineKeyboardButton.fromJson(obj);

    case 'replyMarkupRemoveKeyboard':
      return ReplyMarkupRemoveKeyboard.fromJson(obj);
    case 'replyMarkupForceReply':
      return ReplyMarkupForceReply.fromJson(obj);
    case 'replyMarkupShowKeyboard':
      return ReplyMarkupShowKeyboard.fromJson(obj);
    case 'replyMarkupInlineKeyboard':
      return ReplyMarkupInlineKeyboard.fromJson(obj);

    case 'loginUrlInfoOpen':
      return LoginUrlInfoOpen.fromJson(obj);
    case 'loginUrlInfoRequestConfirmation':
      return LoginUrlInfoRequestConfirmation.fromJson(obj);
    case 'messageThreadInfo':
      return MessageThreadInfo.fromJson(obj);

    case 'richTextPlain':
      return RichTextPlain.fromJson(obj);
    case 'richTextBold':
      return RichTextBold.fromJson(obj);
    case 'richTextItalic':
      return RichTextItalic.fromJson(obj);
    case 'richTextUnderline':
      return RichTextUnderline.fromJson(obj);
    case 'richTextStrikethrough':
      return RichTextStrikethrough.fromJson(obj);
    case 'richTextFixed':
      return RichTextFixed.fromJson(obj);
    case 'richTextUrl':
      return RichTextUrl.fromJson(obj);
    case 'richTextEmailAddress':
      return RichTextEmailAddress.fromJson(obj);
    case 'richTextSubscript':
      return RichTextSubscript.fromJson(obj);
    case 'richTextSuperscript':
      return RichTextSuperscript.fromJson(obj);
    case 'richTextMarked':
      return RichTextMarked.fromJson(obj);
    case 'richTextPhoneNumber':
      return RichTextPhoneNumber.fromJson(obj);
    case 'richTextIcon':
      return RichTextIcon.fromJson(obj);
    case 'richTextReference':
      return RichTextReference.fromJson(obj);
    case 'richTextAnchor':
      return RichTextAnchor.fromJson(obj);
    case 'richTextAnchorLink':
      return RichTextAnchorLink.fromJson(obj);
    case 'richTexts':
      return RichTexts.fromJson(obj);
    case 'pageBlockCaption':
      return PageBlockCaption.fromJson(obj);
    case 'pageBlockListItem':
      return PageBlockListItem.fromJson(obj);

    case 'pageBlockHorizontalAlignmentLeft':
      return PageBlockHorizontalAlignmentLeft.fromJson(obj);
    case 'pageBlockHorizontalAlignmentCenter':
      return PageBlockHorizontalAlignmentCenter.fromJson(obj);
    case 'pageBlockHorizontalAlignmentRight':
      return PageBlockHorizontalAlignmentRight.fromJson(obj);

    case 'pageBlockVerticalAlignmentTop':
      return PageBlockVerticalAlignmentTop.fromJson(obj);
    case 'pageBlockVerticalAlignmentMiddle':
      return PageBlockVerticalAlignmentMiddle.fromJson(obj);
    case 'pageBlockVerticalAlignmentBottom':
      return PageBlockVerticalAlignmentBottom.fromJson(obj);
    case 'pageBlockTableCell':
      return PageBlockTableCell.fromJson(obj);
    case 'pageBlockRelatedArticle':
      return PageBlockRelatedArticle.fromJson(obj);

    case 'pageBlockTitle':
      return PageBlockTitle.fromJson(obj);
    case 'pageBlockSubtitle':
      return PageBlockSubtitle.fromJson(obj);
    case 'pageBlockAuthorDate':
      return PageBlockAuthorDate.fromJson(obj);
    case 'pageBlockHeader':
      return PageBlockHeader.fromJson(obj);
    case 'pageBlockSubheader':
      return PageBlockSubheader.fromJson(obj);
    case 'pageBlockKicker':
      return PageBlockKicker.fromJson(obj);
    case 'pageBlockParagraph':
      return PageBlockParagraph.fromJson(obj);
    case 'pageBlockPreformatted':
      return PageBlockPreformatted.fromJson(obj);
    case 'pageBlockFooter':
      return PageBlockFooter.fromJson(obj);
    case 'pageBlockDivider':
      return PageBlockDivider.fromJson(obj);
    case 'pageBlockAnchor':
      return PageBlockAnchor.fromJson(obj);
    case 'pageBlockList':
      return PageBlockList.fromJson(obj);
    case 'pageBlockBlockQuote':
      return PageBlockBlockQuote.fromJson(obj);
    case 'pageBlockPullQuote':
      return PageBlockPullQuote.fromJson(obj);
    case 'pageBlockAnimation':
      return PageBlockAnimation.fromJson(obj);
    case 'pageBlockAudio':
      return PageBlockAudio.fromJson(obj);
    case 'pageBlockPhoto':
      return PageBlockPhoto.fromJson(obj);
    case 'pageBlockVideo':
      return PageBlockVideo.fromJson(obj);
    case 'pageBlockVoiceNote':
      return PageBlockVoiceNote.fromJson(obj);
    case 'pageBlockCover':
      return PageBlockCover.fromJson(obj);
    case 'pageBlockEmbedded':
      return PageBlockEmbedded.fromJson(obj);
    case 'pageBlockEmbeddedPost':
      return PageBlockEmbeddedPost.fromJson(obj);
    case 'pageBlockCollage':
      return PageBlockCollage.fromJson(obj);
    case 'pageBlockSlideshow':
      return PageBlockSlideshow.fromJson(obj);
    case 'pageBlockChatLink':
      return PageBlockChatLink.fromJson(obj);
    case 'pageBlockTable':
      return PageBlockTable.fromJson(obj);
    case 'pageBlockDetails':
      return PageBlockDetails.fromJson(obj);
    case 'pageBlockRelatedArticles':
      return PageBlockRelatedArticles.fromJson(obj);
    case 'pageBlockMap':
      return PageBlockMap.fromJson(obj);
    case 'webPageInstantView':
      return WebPageInstantView.fromJson(obj);
    case 'webPage':
      return WebPage.fromJson(obj);
    case 'countryInfo':
      return CountryInfo.fromJson(obj);
    case 'countries':
      return Countries.fromJson(obj);
    case 'phoneNumberInfo':
      return PhoneNumberInfo.fromJson(obj);
    case 'bankCardActionOpenUrl':
      return BankCardActionOpenUrl.fromJson(obj);
    case 'bankCardInfo':
      return BankCardInfo.fromJson(obj);
    case 'address':
      return Address.fromJson(obj);
    case 'labeledPricePart':
      return LabeledPricePart.fromJson(obj);
    case 'invoice':
      return Invoice.fromJson(obj);
    case 'orderInfo':
      return OrderInfo.fromJson(obj);
    case 'shippingOption':
      return ShippingOption.fromJson(obj);
    case 'savedCredentials':
      return SavedCredentials.fromJson(obj);

    case 'inputCredentialsSaved':
      return InputCredentialsSaved.fromJson(obj);
    case 'inputCredentialsNew':
      return InputCredentialsNew.fromJson(obj);
    case 'inputCredentialsApplePay':
      return InputCredentialsApplePay.fromJson(obj);
    case 'inputCredentialsGooglePay':
      return InputCredentialsGooglePay.fromJson(obj);
    case 'paymentsProviderStripe':
      return PaymentsProviderStripe.fromJson(obj);
    case 'paymentFormTheme':
      return PaymentFormTheme.fromJson(obj);
    case 'paymentForm':
      return PaymentForm.fromJson(obj);
    case 'validatedOrderInfo':
      return ValidatedOrderInfo.fromJson(obj);
    case 'paymentResult':
      return PaymentResult.fromJson(obj);
    case 'paymentReceipt':
      return PaymentReceipt.fromJson(obj);
    case 'datedFile':
      return DatedFile.fromJson(obj);

    case 'passportElementTypePersonalDetails':
      return PassportElementTypePersonalDetails.fromJson(obj);
    case 'passportElementTypePassport':
      return PassportElementTypePassport.fromJson(obj);
    case 'passportElementTypeDriverLicense':
      return PassportElementTypeDriverLicense.fromJson(obj);
    case 'passportElementTypeIdentityCard':
      return PassportElementTypeIdentityCard.fromJson(obj);
    case 'passportElementTypeInternalPassport':
      return PassportElementTypeInternalPassport.fromJson(obj);
    case 'passportElementTypeAddress':
      return PassportElementTypeAddress.fromJson(obj);
    case 'passportElementTypeUtilityBill':
      return PassportElementTypeUtilityBill.fromJson(obj);
    case 'passportElementTypeBankStatement':
      return PassportElementTypeBankStatement.fromJson(obj);
    case 'passportElementTypeRentalAgreement':
      return PassportElementTypeRentalAgreement.fromJson(obj);
    case 'passportElementTypePassportRegistration':
      return PassportElementTypePassportRegistration.fromJson(obj);
    case 'passportElementTypeTemporaryRegistration':
      return PassportElementTypeTemporaryRegistration.fromJson(obj);
    case 'passportElementTypePhoneNumber':
      return PassportElementTypePhoneNumber.fromJson(obj);
    case 'passportElementTypeEmailAddress':
      return PassportElementTypeEmailAddress.fromJson(obj);
    case 'date':
      return Date.fromJson(obj);
    case 'personalDetails':
      return PersonalDetails.fromJson(obj);
    case 'identityDocument':
      return IdentityDocument.fromJson(obj);
    case 'inputIdentityDocument':
      return InputIdentityDocument.fromJson(obj);
    case 'personalDocument':
      return PersonalDocument.fromJson(obj);
    case 'inputPersonalDocument':
      return InputPersonalDocument.fromJson(obj);

    case 'passportElementPersonalDetails':
      return PassportElementPersonalDetails.fromJson(obj);
    case 'passportElementPassport':
      return PassportElementPassport.fromJson(obj);
    case 'passportElementDriverLicense':
      return PassportElementDriverLicense.fromJson(obj);
    case 'passportElementIdentityCard':
      return PassportElementIdentityCard.fromJson(obj);
    case 'passportElementInternalPassport':
      return PassportElementInternalPassport.fromJson(obj);
    case 'passportElementAddress':
      return PassportElementAddress.fromJson(obj);
    case 'passportElementUtilityBill':
      return PassportElementUtilityBill.fromJson(obj);
    case 'passportElementBankStatement':
      return PassportElementBankStatement.fromJson(obj);
    case 'passportElementRentalAgreement':
      return PassportElementRentalAgreement.fromJson(obj);
    case 'passportElementPassportRegistration':
      return PassportElementPassportRegistration.fromJson(obj);
    case 'passportElementTemporaryRegistration':
      return PassportElementTemporaryRegistration.fromJson(obj);
    case 'passportElementPhoneNumber':
      return PassportElementPhoneNumber.fromJson(obj);
    case 'passportElementEmailAddress':
      return PassportElementEmailAddress.fromJson(obj);

    case 'inputPassportElementPersonalDetails':
      return InputPassportElementPersonalDetails.fromJson(obj);
    case 'inputPassportElementPassport':
      return InputPassportElementPassport.fromJson(obj);
    case 'inputPassportElementDriverLicense':
      return InputPassportElementDriverLicense.fromJson(obj);
    case 'inputPassportElementIdentityCard':
      return InputPassportElementIdentityCard.fromJson(obj);
    case 'inputPassportElementInternalPassport':
      return InputPassportElementInternalPassport.fromJson(obj);
    case 'inputPassportElementAddress':
      return InputPassportElementAddress.fromJson(obj);
    case 'inputPassportElementUtilityBill':
      return InputPassportElementUtilityBill.fromJson(obj);
    case 'inputPassportElementBankStatement':
      return InputPassportElementBankStatement.fromJson(obj);
    case 'inputPassportElementRentalAgreement':
      return InputPassportElementRentalAgreement.fromJson(obj);
    case 'inputPassportElementPassportRegistration':
      return InputPassportElementPassportRegistration.fromJson(obj);
    case 'inputPassportElementTemporaryRegistration':
      return InputPassportElementTemporaryRegistration.fromJson(obj);
    case 'inputPassportElementPhoneNumber':
      return InputPassportElementPhoneNumber.fromJson(obj);
    case 'inputPassportElementEmailAddress':
      return InputPassportElementEmailAddress.fromJson(obj);
    case 'passportElements':
      return PassportElements.fromJson(obj);

    case 'passportElementErrorSourceUnspecified':
      return PassportElementErrorSourceUnspecified.fromJson(obj);
    case 'passportElementErrorSourceDataField':
      return PassportElementErrorSourceDataField.fromJson(obj);
    case 'passportElementErrorSourceFrontSide':
      return PassportElementErrorSourceFrontSide.fromJson(obj);
    case 'passportElementErrorSourceReverseSide':
      return PassportElementErrorSourceReverseSide.fromJson(obj);
    case 'passportElementErrorSourceSelfie':
      return PassportElementErrorSourceSelfie.fromJson(obj);
    case 'passportElementErrorSourceTranslationFile':
      return PassportElementErrorSourceTranslationFile.fromJson(obj);
    case 'passportElementErrorSourceTranslationFiles':
      return PassportElementErrorSourceTranslationFiles.fromJson(obj);
    case 'passportElementErrorSourceFile':
      return PassportElementErrorSourceFile.fromJson(obj);
    case 'passportElementErrorSourceFiles':
      return PassportElementErrorSourceFiles.fromJson(obj);
    case 'passportElementError':
      return PassportElementError.fromJson(obj);
    case 'passportSuitableElement':
      return PassportSuitableElement.fromJson(obj);
    case 'passportRequiredElement':
      return PassportRequiredElement.fromJson(obj);
    case 'passportAuthorizationForm':
      return PassportAuthorizationForm.fromJson(obj);
    case 'passportElementsWithErrors':
      return PassportElementsWithErrors.fromJson(obj);
    case 'encryptedCredentials':
      return EncryptedCredentials.fromJson(obj);
    case 'encryptedPassportElement':
      return EncryptedPassportElement.fromJson(obj);

    case 'inputPassportElementErrorSourceUnspecified':
      return InputPassportElementErrorSourceUnspecified.fromJson(obj);
    case 'inputPassportElementErrorSourceDataField':
      return InputPassportElementErrorSourceDataField.fromJson(obj);
    case 'inputPassportElementErrorSourceFrontSide':
      return InputPassportElementErrorSourceFrontSide.fromJson(obj);
    case 'inputPassportElementErrorSourceReverseSide':
      return InputPassportElementErrorSourceReverseSide.fromJson(obj);
    case 'inputPassportElementErrorSourceSelfie':
      return InputPassportElementErrorSourceSelfie.fromJson(obj);
    case 'inputPassportElementErrorSourceTranslationFile':
      return InputPassportElementErrorSourceTranslationFile.fromJson(obj);
    case 'inputPassportElementErrorSourceTranslationFiles':
      return InputPassportElementErrorSourceTranslationFiles.fromJson(obj);
    case 'inputPassportElementErrorSourceFile':
      return InputPassportElementErrorSourceFile.fromJson(obj);
    case 'inputPassportElementErrorSourceFiles':
      return InputPassportElementErrorSourceFiles.fromJson(obj);
    case 'inputPassportElementError':
      return InputPassportElementError.fromJson(obj);

    case 'messageText':
      return MessageText.fromJson(obj);
    case 'messageAnimation':
      return MessageAnimation.fromJson(obj);
    case 'messageAudio':
      return MessageAudio.fromJson(obj);
    case 'messageDocument':
      return MessageDocument.fromJson(obj);
    case 'messagePhoto':
      return MessagePhoto.fromJson(obj);
    case 'messageExpiredPhoto':
      return MessageExpiredPhoto.fromJson(obj);
    case 'messageSticker':
      return MessageSticker.fromJson(obj);
    case 'messageVideo':
      return MessageVideo.fromJson(obj);
    case 'messageExpiredVideo':
      return MessageExpiredVideo.fromJson(obj);
    case 'messageVideoNote':
      return MessageVideoNote.fromJson(obj);
    case 'messageVoiceNote':
      return MessageVoiceNote.fromJson(obj);
    case 'messageLocation':
      return MessageLocation.fromJson(obj);
    case 'messageVenue':
      return MessageVenue.fromJson(obj);
    case 'messageContact':
      return MessageContact.fromJson(obj);
    case 'messageDice':
      return MessageDice.fromJson(obj);
    case 'messageGame':
      return MessageGame.fromJson(obj);
    case 'messagePoll':
      return MessagePoll.fromJson(obj);
    case 'messageInvoice':
      return MessageInvoice.fromJson(obj);
    case 'messageCall':
      return MessageCall.fromJson(obj);
    case 'messageVoiceChatScheduled':
      return MessageVoiceChatScheduled.fromJson(obj);
    case 'messageVoiceChatStarted':
      return MessageVoiceChatStarted.fromJson(obj);
    case 'messageVoiceChatEnded':
      return MessageVoiceChatEnded.fromJson(obj);
    case 'messageInviteVoiceChatParticipants':
      return MessageInviteVoiceChatParticipants.fromJson(obj);
    case 'messageBasicGroupChatCreate':
      return MessageBasicGroupChatCreate.fromJson(obj);
    case 'messageSupergroupChatCreate':
      return MessageSupergroupChatCreate.fromJson(obj);
    case 'messageChatChangeTitle':
      return MessageChatChangeTitle.fromJson(obj);
    case 'messageChatChangePhoto':
      return MessageChatChangePhoto.fromJson(obj);
    case 'messageChatDeletePhoto':
      return MessageChatDeletePhoto.fromJson(obj);
    case 'messageChatAddMembers':
      return MessageChatAddMembers.fromJson(obj);
    case 'messageChatJoinByLink':
      return MessageChatJoinByLink.fromJson(obj);
    case 'messageChatDeleteMember':
      return MessageChatDeleteMember.fromJson(obj);
    case 'messageChatUpgradeTo':
      return MessageChatUpgradeTo.fromJson(obj);
    case 'messageChatUpgradeFrom':
      return MessageChatUpgradeFrom.fromJson(obj);
    case 'messagePinMessage':
      return MessagePinMessage.fromJson(obj);
    case 'messageScreenshotTaken':
      return MessageScreenshotTaken.fromJson(obj);
    case 'messageChatSetTtl':
      return MessageChatSetTtl.fromJson(obj);
    case 'messageCustomServiceAction':
      return MessageCustomServiceAction.fromJson(obj);
    case 'messageGameScore':
      return MessageGameScore.fromJson(obj);
    case 'messagePaymentSuccessful':
      return MessagePaymentSuccessful.fromJson(obj);
    case 'messagePaymentSuccessfulBot':
      return MessagePaymentSuccessfulBot.fromJson(obj);
    case 'messageContactRegistered':
      return MessageContactRegistered.fromJson(obj);
    case 'messageWebsiteConnected':
      return MessageWebsiteConnected.fromJson(obj);
    case 'messagePassportDataSent':
      return MessagePassportDataSent.fromJson(obj);
    case 'messagePassportDataReceived':
      return MessagePassportDataReceived.fromJson(obj);
    case 'messageProximityAlertTriggered':
      return MessageProximityAlertTriggered.fromJson(obj);
    case 'messageUnsupported':
      return MessageUnsupported.fromJson(obj);

    case 'textEntityTypeMention':
      return TextEntityTypeMention.fromJson(obj);
    case 'textEntityTypeHashtag':
      return TextEntityTypeHashtag.fromJson(obj);
    case 'textEntityTypeCashtag':
      return TextEntityTypeCashtag.fromJson(obj);
    case 'textEntityTypeBotCommand':
      return TextEntityTypeBotCommand.fromJson(obj);
    case 'textEntityTypeUrl':
      return TextEntityTypeUrl.fromJson(obj);
    case 'textEntityTypeEmailAddress':
      return TextEntityTypeEmailAddress.fromJson(obj);
    case 'textEntityTypePhoneNumber':
      return TextEntityTypePhoneNumber.fromJson(obj);
    case 'textEntityTypeBankCardNumber':
      return TextEntityTypeBankCardNumber.fromJson(obj);
    case 'textEntityTypeBold':
      return TextEntityTypeBold.fromJson(obj);
    case 'textEntityTypeItalic':
      return TextEntityTypeItalic.fromJson(obj);
    case 'textEntityTypeUnderline':
      return TextEntityTypeUnderline.fromJson(obj);
    case 'textEntityTypeStrikethrough':
      return TextEntityTypeStrikethrough.fromJson(obj);
    case 'textEntityTypeCode':
      return TextEntityTypeCode.fromJson(obj);
    case 'textEntityTypePre':
      return TextEntityTypePre.fromJson(obj);
    case 'textEntityTypePreCode':
      return TextEntityTypePreCode.fromJson(obj);
    case 'textEntityTypeTextUrl':
      return TextEntityTypeTextUrl.fromJson(obj);
    case 'textEntityTypeMentionName':
      return TextEntityTypeMentionName.fromJson(obj);
    case 'inputThumbnail':
      return InputThumbnail.fromJson(obj);

    case 'messageSchedulingStateSendAtDate':
      return MessageSchedulingStateSendAtDate.fromJson(obj);
    case 'messageSchedulingStateSendWhenOnline':
      return MessageSchedulingStateSendWhenOnline.fromJson(obj);
    case 'messageSendOptions':
      return MessageSendOptions.fromJson(obj);
    case 'messageCopyOptions':
      return MessageCopyOptions.fromJson(obj);

    case 'inputMessageText':
      return InputMessageText.fromJson(obj);
    case 'inputMessageAnimation':
      return InputMessageAnimation.fromJson(obj);
    case 'inputMessageAudio':
      return InputMessageAudio.fromJson(obj);
    case 'inputMessageDocument':
      return InputMessageDocument.fromJson(obj);
    case 'inputMessagePhoto':
      return InputMessagePhoto.fromJson(obj);
    case 'inputMessageSticker':
      return InputMessageSticker.fromJson(obj);
    case 'inputMessageVideo':
      return InputMessageVideo.fromJson(obj);
    case 'inputMessageVideoNote':
      return InputMessageVideoNote.fromJson(obj);
    case 'inputMessageVoiceNote':
      return InputMessageVoiceNote.fromJson(obj);
    case 'inputMessageLocation':
      return InputMessageLocation.fromJson(obj);
    case 'inputMessageVenue':
      return InputMessageVenue.fromJson(obj);
    case 'inputMessageContact':
      return InputMessageContact.fromJson(obj);
    case 'inputMessageDice':
      return InputMessageDice.fromJson(obj);
    case 'inputMessageGame':
      return InputMessageGame.fromJson(obj);
    case 'inputMessageInvoice':
      return InputMessageInvoice.fromJson(obj);
    case 'inputMessagePoll':
      return InputMessagePoll.fromJson(obj);
    case 'inputMessageForwarded':
      return InputMessageForwarded.fromJson(obj);

    case 'searchMessagesFilterEmpty':
      return SearchMessagesFilterEmpty.fromJson(obj);
    case 'searchMessagesFilterAnimation':
      return SearchMessagesFilterAnimation.fromJson(obj);
    case 'searchMessagesFilterAudio':
      return SearchMessagesFilterAudio.fromJson(obj);
    case 'searchMessagesFilterDocument':
      return SearchMessagesFilterDocument.fromJson(obj);
    case 'searchMessagesFilterPhoto':
      return SearchMessagesFilterPhoto.fromJson(obj);
    case 'searchMessagesFilterVideo':
      return SearchMessagesFilterVideo.fromJson(obj);
    case 'searchMessagesFilterVoiceNote':
      return SearchMessagesFilterVoiceNote.fromJson(obj);
    case 'searchMessagesFilterPhotoAndVideo':
      return SearchMessagesFilterPhotoAndVideo.fromJson(obj);
    case 'searchMessagesFilterUrl':
      return SearchMessagesFilterUrl.fromJson(obj);
    case 'searchMessagesFilterChatPhoto':
      return SearchMessagesFilterChatPhoto.fromJson(obj);
    case 'searchMessagesFilterCall':
      return SearchMessagesFilterCall.fromJson(obj);
    case 'searchMessagesFilterMissedCall':
      return SearchMessagesFilterMissedCall.fromJson(obj);
    case 'searchMessagesFilterVideoNote':
      return SearchMessagesFilterVideoNote.fromJson(obj);
    case 'searchMessagesFilterVoiceAndVideoNote':
      return SearchMessagesFilterVoiceAndVideoNote.fromJson(obj);
    case 'searchMessagesFilterMention':
      return SearchMessagesFilterMention.fromJson(obj);
    case 'searchMessagesFilterUnreadMention':
      return SearchMessagesFilterUnreadMention.fromJson(obj);
    case 'searchMessagesFilterFailedToSend':
      return SearchMessagesFilterFailedToSend.fromJson(obj);
    case 'searchMessagesFilterPinned':
      return SearchMessagesFilterPinned.fromJson(obj);

    case 'chatActionTyping':
      return ChatActionTyping.fromJson(obj);
    case 'chatActionRecordingVideo':
      return ChatActionRecordingVideo.fromJson(obj);
    case 'chatActionUploadingVideo':
      return ChatActionUploadingVideo.fromJson(obj);
    case 'chatActionRecordingVoiceNote':
      return ChatActionRecordingVoiceNote.fromJson(obj);
    case 'chatActionUploadingVoiceNote':
      return ChatActionUploadingVoiceNote.fromJson(obj);
    case 'chatActionUploadingPhoto':
      return ChatActionUploadingPhoto.fromJson(obj);
    case 'chatActionUploadingDocument':
      return ChatActionUploadingDocument.fromJson(obj);
    case 'chatActionChoosingLocation':
      return ChatActionChoosingLocation.fromJson(obj);
    case 'chatActionChoosingContact':
      return ChatActionChoosingContact.fromJson(obj);
    case 'chatActionStartPlayingGame':
      return ChatActionStartPlayingGame.fromJson(obj);
    case 'chatActionRecordingVideoNote':
      return ChatActionRecordingVideoNote.fromJson(obj);
    case 'chatActionUploadingVideoNote':
      return ChatActionUploadingVideoNote.fromJson(obj);
    case 'chatActionCancel':
      return ChatActionCancel.fromJson(obj);

    case 'userStatusEmpty':
      return UserStatusEmpty.fromJson(obj);
    case 'userStatusOnline':
      return UserStatusOnline.fromJson(obj);
    case 'userStatusOffline':
      return UserStatusOffline.fromJson(obj);
    case 'userStatusRecently':
      return UserStatusRecently.fromJson(obj);
    case 'userStatusLastWeek':
      return UserStatusLastWeek.fromJson(obj);
    case 'userStatusLastMonth':
      return UserStatusLastMonth.fromJson(obj);
    case 'stickers':
      return Stickers.fromJson(obj);
    case 'emojis':
      return Emojis.fromJson(obj);
    case 'stickerSet':
      return StickerSet.fromJson(obj);
    case 'stickerSetInfo':
      return StickerSetInfo.fromJson(obj);
    case 'stickerSets':
      return StickerSets.fromJson(obj);

    case 'callDiscardReasonEmpty':
      return CallDiscardReasonEmpty.fromJson(obj);
    case 'callDiscardReasonMissed':
      return CallDiscardReasonMissed.fromJson(obj);
    case 'callDiscardReasonDeclined':
      return CallDiscardReasonDeclined.fromJson(obj);
    case 'callDiscardReasonDisconnected':
      return CallDiscardReasonDisconnected.fromJson(obj);
    case 'callDiscardReasonHungUp':
      return CallDiscardReasonHungUp.fromJson(obj);
    case 'callProtocol':
      return CallProtocol.fromJson(obj);

    case 'callServerTypeTelegramReflector':
      return CallServerTypeTelegramReflector.fromJson(obj);
    case 'callServerTypeWebrtc':
      return CallServerTypeWebrtc.fromJson(obj);
    case 'callServer':
      return CallServer.fromJson(obj);
    case 'callId':
      return CallId.fromJson(obj);
    case 'groupCallId':
      return GroupCallId.fromJson(obj);

    case 'callStatePending':
      return CallStatePending.fromJson(obj);
    case 'callStateExchangingKeys':
      return CallStateExchangingKeys.fromJson(obj);
    case 'callStateReady':
      return CallStateReady.fromJson(obj);
    case 'callStateHangingUp':
      return CallStateHangingUp.fromJson(obj);
    case 'callStateDiscarded':
      return CallStateDiscarded.fromJson(obj);
    case 'callStateError':
      return CallStateError.fromJson(obj);
    case 'groupCallRecentSpeaker':
      return GroupCallRecentSpeaker.fromJson(obj);
    case 'groupCall':
      return GroupCall.fromJson(obj);
    case 'groupCallVideoSourceGroup':
      return GroupCallVideoSourceGroup.fromJson(obj);
    case 'groupCallParticipantVideoInfo':
      return GroupCallParticipantVideoInfo.fromJson(obj);
    case 'groupCallParticipant':
      return GroupCallParticipant.fromJson(obj);

    case 'callProblemEcho':
      return CallProblemEcho.fromJson(obj);
    case 'callProblemNoise':
      return CallProblemNoise.fromJson(obj);
    case 'callProblemInterruptions':
      return CallProblemInterruptions.fromJson(obj);
    case 'callProblemDistortedSpeech':
      return CallProblemDistortedSpeech.fromJson(obj);
    case 'callProblemSilentLocal':
      return CallProblemSilentLocal.fromJson(obj);
    case 'callProblemSilentRemote':
      return CallProblemSilentRemote.fromJson(obj);
    case 'callProblemDropped':
      return CallProblemDropped.fromJson(obj);
    case 'callProblemDistortedVideo':
      return CallProblemDistortedVideo.fromJson(obj);
    case 'callProblemPixelatedVideo':
      return CallProblemPixelatedVideo.fromJson(obj);
    case 'call':
      return Call.fromJson(obj);
    case 'phoneNumberAuthenticationSettings':
      return PhoneNumberAuthenticationSettings.fromJson(obj);
    case 'animations':
      return Animations.fromJson(obj);

    case 'diceStickersRegular':
      return DiceStickersRegular.fromJson(obj);
    case 'diceStickersSlotMachine':
      return DiceStickersSlotMachine.fromJson(obj);
    case 'importedContacts':
      return ImportedContacts.fromJson(obj);
    case 'httpUrl':
      return HttpUrl.fromJson(obj);

    case 'inputInlineQueryResultAnimation':
      return InputInlineQueryResultAnimation.fromJson(obj);
    case 'inputInlineQueryResultArticle':
      return InputInlineQueryResultArticle.fromJson(obj);
    case 'inputInlineQueryResultAudio':
      return InputInlineQueryResultAudio.fromJson(obj);
    case 'inputInlineQueryResultContact':
      return InputInlineQueryResultContact.fromJson(obj);
    case 'inputInlineQueryResultDocument':
      return InputInlineQueryResultDocument.fromJson(obj);
    case 'inputInlineQueryResultGame':
      return InputInlineQueryResultGame.fromJson(obj);
    case 'inputInlineQueryResultLocation':
      return InputInlineQueryResultLocation.fromJson(obj);
    case 'inputInlineQueryResultPhoto':
      return InputInlineQueryResultPhoto.fromJson(obj);
    case 'inputInlineQueryResultSticker':
      return InputInlineQueryResultSticker.fromJson(obj);
    case 'inputInlineQueryResultVenue':
      return InputInlineQueryResultVenue.fromJson(obj);
    case 'inputInlineQueryResultVideo':
      return InputInlineQueryResultVideo.fromJson(obj);
    case 'inputInlineQueryResultVoiceNote':
      return InputInlineQueryResultVoiceNote.fromJson(obj);

    case 'inlineQueryResultArticle':
      return InlineQueryResultArticle.fromJson(obj);
    case 'inlineQueryResultContact':
      return InlineQueryResultContact.fromJson(obj);
    case 'inlineQueryResultLocation':
      return InlineQueryResultLocation.fromJson(obj);
    case 'inlineQueryResultVenue':
      return InlineQueryResultVenue.fromJson(obj);
    case 'inlineQueryResultGame':
      return InlineQueryResultGame.fromJson(obj);
    case 'inlineQueryResultAnimation':
      return InlineQueryResultAnimation.fromJson(obj);
    case 'inlineQueryResultAudio':
      return InlineQueryResultAudio.fromJson(obj);
    case 'inlineQueryResultDocument':
      return InlineQueryResultDocument.fromJson(obj);
    case 'inlineQueryResultPhoto':
      return InlineQueryResultPhoto.fromJson(obj);
    case 'inlineQueryResultSticker':
      return InlineQueryResultSticker.fromJson(obj);
    case 'inlineQueryResultVideo':
      return InlineQueryResultVideo.fromJson(obj);
    case 'inlineQueryResultVoiceNote':
      return InlineQueryResultVoiceNote.fromJson(obj);
    case 'inlineQueryResults':
      return InlineQueryResults.fromJson(obj);

    case 'callbackQueryPayloadData':
      return CallbackQueryPayloadData.fromJson(obj);
    case 'callbackQueryPayloadDataWithPassword':
      return CallbackQueryPayloadDataWithPassword.fromJson(obj);
    case 'callbackQueryPayloadGame':
      return CallbackQueryPayloadGame.fromJson(obj);
    case 'callbackQueryAnswer':
      return CallbackQueryAnswer.fromJson(obj);
    case 'customRequestResult':
      return CustomRequestResult.fromJson(obj);
    case 'gameHighScore':
      return GameHighScore.fromJson(obj);
    case 'gameHighScores':
      return GameHighScores.fromJson(obj);

    case 'chatEventMessageEdited':
      return ChatEventMessageEdited.fromJson(obj);
    case 'chatEventMessageDeleted':
      return ChatEventMessageDeleted.fromJson(obj);
    case 'chatEventPollStopped':
      return ChatEventPollStopped.fromJson(obj);
    case 'chatEventMessagePinned':
      return ChatEventMessagePinned.fromJson(obj);
    case 'chatEventMessageUnpinned':
      return ChatEventMessageUnpinned.fromJson(obj);
    case 'chatEventMemberJoined':
      return ChatEventMemberJoined.fromJson(obj);
    case 'chatEventMemberJoinedByInviteLink':
      return ChatEventMemberJoinedByInviteLink.fromJson(obj);
    case 'chatEventMemberLeft':
      return ChatEventMemberLeft.fromJson(obj);
    case 'chatEventMemberInvited':
      return ChatEventMemberInvited.fromJson(obj);
    case 'chatEventMemberPromoted':
      return ChatEventMemberPromoted.fromJson(obj);
    case 'chatEventMemberRestricted':
      return ChatEventMemberRestricted.fromJson(obj);
    case 'chatEventTitleChanged':
      return ChatEventTitleChanged.fromJson(obj);
    case 'chatEventPermissionsChanged':
      return ChatEventPermissionsChanged.fromJson(obj);
    case 'chatEventDescriptionChanged':
      return ChatEventDescriptionChanged.fromJson(obj);
    case 'chatEventUsernameChanged':
      return ChatEventUsernameChanged.fromJson(obj);
    case 'chatEventPhotoChanged':
      return ChatEventPhotoChanged.fromJson(obj);
    case 'chatEventInvitesToggled':
      return ChatEventInvitesToggled.fromJson(obj);
    case 'chatEventLinkedChatChanged':
      return ChatEventLinkedChatChanged.fromJson(obj);
    case 'chatEventSlowModeDelayChanged':
      return ChatEventSlowModeDelayChanged.fromJson(obj);
    case 'chatEventMessageTtlSettingChanged':
      return ChatEventMessageTtlSettingChanged.fromJson(obj);
    case 'chatEventSignMessagesToggled':
      return ChatEventSignMessagesToggled.fromJson(obj);
    case 'chatEventStickerSetChanged':
      return ChatEventStickerSetChanged.fromJson(obj);
    case 'chatEventLocationChanged':
      return ChatEventLocationChanged.fromJson(obj);
    case 'chatEventIsAllHistoryAvailableToggled':
      return ChatEventIsAllHistoryAvailableToggled.fromJson(obj);
    case 'chatEventInviteLinkEdited':
      return ChatEventInviteLinkEdited.fromJson(obj);
    case 'chatEventInviteLinkRevoked':
      return ChatEventInviteLinkRevoked.fromJson(obj);
    case 'chatEventInviteLinkDeleted':
      return ChatEventInviteLinkDeleted.fromJson(obj);
    case 'chatEventVoiceChatCreated':
      return ChatEventVoiceChatCreated.fromJson(obj);
    case 'chatEventVoiceChatDiscarded':
      return ChatEventVoiceChatDiscarded.fromJson(obj);
    case 'chatEventVoiceChatParticipantIsMutedToggled':
      return ChatEventVoiceChatParticipantIsMutedToggled.fromJson(obj);
    case 'chatEventVoiceChatParticipantVolumeLevelChanged':
      return ChatEventVoiceChatParticipantVolumeLevelChanged.fromJson(obj);
    case 'chatEventVoiceChatMuteNewParticipantsToggled':
      return ChatEventVoiceChatMuteNewParticipantsToggled.fromJson(obj);
    case 'chatEvent':
      return ChatEvent.fromJson(obj);
    case 'chatEvents':
      return ChatEvents.fromJson(obj);
    case 'chatEventLogFilters':
      return ChatEventLogFilters.fromJson(obj);

    case 'languagePackStringValueOrdinary':
      return LanguagePackStringValueOrdinary.fromJson(obj);
    case 'languagePackStringValuePluralized':
      return LanguagePackStringValuePluralized.fromJson(obj);
    case 'languagePackStringValueDeleted':
      return LanguagePackStringValueDeleted.fromJson(obj);
    case 'languagePackString':
      return LanguagePackString.fromJson(obj);
    case 'languagePackStrings':
      return LanguagePackStrings.fromJson(obj);
    case 'languagePackInfo':
      return LanguagePackInfo.fromJson(obj);
    case 'localizationTargetInfo':
      return LocalizationTargetInfo.fromJson(obj);

    case 'deviceTokenFirebaseCloudMessaging':
      return DeviceTokenFirebaseCloudMessaging.fromJson(obj);
    case 'deviceTokenApplePush':
      return DeviceTokenApplePush.fromJson(obj);
    case 'deviceTokenApplePushVoIP':
      return DeviceTokenApplePushVoIP.fromJson(obj);
    case 'deviceTokenWindowsPush':
      return DeviceTokenWindowsPush.fromJson(obj);
    case 'deviceTokenMicrosoftPush':
      return DeviceTokenMicrosoftPush.fromJson(obj);
    case 'deviceTokenMicrosoftPushVoIP':
      return DeviceTokenMicrosoftPushVoIP.fromJson(obj);
    case 'deviceTokenWebPush':
      return DeviceTokenWebPush.fromJson(obj);
    case 'deviceTokenSimplePush':
      return DeviceTokenSimplePush.fromJson(obj);
    case 'deviceTokenUbuntuPush':
      return DeviceTokenUbuntuPush.fromJson(obj);
    case 'deviceTokenBlackBerryPush':
      return DeviceTokenBlackBerryPush.fromJson(obj);
    case 'deviceTokenTizenPush':
      return DeviceTokenTizenPush.fromJson(obj);
    case 'pushReceiverId':
      return PushReceiverId.fromJson(obj);

    case 'backgroundFillSolid':
      return BackgroundFillSolid.fromJson(obj);
    case 'backgroundFillGradient':
      return BackgroundFillGradient.fromJson(obj);
    case 'backgroundFillFreeformGradient':
      return BackgroundFillFreeformGradient.fromJson(obj);

    case 'backgroundTypeWallpaper':
      return BackgroundTypeWallpaper.fromJson(obj);
    case 'backgroundTypePattern':
      return BackgroundTypePattern.fromJson(obj);
    case 'backgroundTypeFill':
      return BackgroundTypeFill.fromJson(obj);
    case 'background':
      return Background.fromJson(obj);
    case 'backgrounds':
      return Backgrounds.fromJson(obj);

    case 'inputBackgroundLocal':
      return InputBackgroundLocal.fromJson(obj);
    case 'inputBackgroundRemote':
      return InputBackgroundRemote.fromJson(obj);
    case 'hashtags':
      return Hashtags.fromJson(obj);

    case 'canTransferOwnershipResultOk':
      return CanTransferOwnershipResultOk.fromJson(obj);
    case 'canTransferOwnershipResultPasswordNeeded':
      return CanTransferOwnershipResultPasswordNeeded.fromJson(obj);
    case 'canTransferOwnershipResultPasswordTooFresh':
      return CanTransferOwnershipResultPasswordTooFresh.fromJson(obj);
    case 'canTransferOwnershipResultSessionTooFresh':
      return CanTransferOwnershipResultSessionTooFresh.fromJson(obj);

    case 'checkChatUsernameResultOk':
      return CheckChatUsernameResultOk.fromJson(obj);
    case 'checkChatUsernameResultUsernameInvalid':
      return CheckChatUsernameResultUsernameInvalid.fromJson(obj);
    case 'checkChatUsernameResultUsernameOccupied':
      return CheckChatUsernameResultUsernameOccupied.fromJson(obj);
    case 'checkChatUsernameResultPublicChatsTooMuch':
      return CheckChatUsernameResultPublicChatsTooMuch.fromJson(obj);
    case 'checkChatUsernameResultPublicGroupsUnavailable':
      return CheckChatUsernameResultPublicGroupsUnavailable.fromJson(obj);

    case 'checkStickerSetNameResultOk':
      return CheckStickerSetNameResultOk.fromJson(obj);
    case 'checkStickerSetNameResultNameInvalid':
      return CheckStickerSetNameResultNameInvalid.fromJson(obj);
    case 'checkStickerSetNameResultNameOccupied':
      return CheckStickerSetNameResultNameOccupied.fromJson(obj);

    case 'messageFileTypePrivate':
      return MessageFileTypePrivate.fromJson(obj);
    case 'messageFileTypeGroup':
      return MessageFileTypeGroup.fromJson(obj);
    case 'messageFileTypeUnknown':
      return MessageFileTypeUnknown.fromJson(obj);

    case 'pushMessageContentHidden':
      return PushMessageContentHidden.fromJson(obj);
    case 'pushMessageContentAnimation':
      return PushMessageContentAnimation.fromJson(obj);
    case 'pushMessageContentAudio':
      return PushMessageContentAudio.fromJson(obj);
    case 'pushMessageContentContact':
      return PushMessageContentContact.fromJson(obj);
    case 'pushMessageContentContactRegistered':
      return PushMessageContentContactRegistered.fromJson(obj);
    case 'pushMessageContentDocument':
      return PushMessageContentDocument.fromJson(obj);
    case 'pushMessageContentGame':
      return PushMessageContentGame.fromJson(obj);
    case 'pushMessageContentGameScore':
      return PushMessageContentGameScore.fromJson(obj);
    case 'pushMessageContentInvoice':
      return PushMessageContentInvoice.fromJson(obj);
    case 'pushMessageContentLocation':
      return PushMessageContentLocation.fromJson(obj);
    case 'pushMessageContentPhoto':
      return PushMessageContentPhoto.fromJson(obj);
    case 'pushMessageContentPoll':
      return PushMessageContentPoll.fromJson(obj);
    case 'pushMessageContentScreenshotTaken':
      return PushMessageContentScreenshotTaken.fromJson(obj);
    case 'pushMessageContentSticker':
      return PushMessageContentSticker.fromJson(obj);
    case 'pushMessageContentText':
      return PushMessageContentText.fromJson(obj);
    case 'pushMessageContentVideo':
      return PushMessageContentVideo.fromJson(obj);
    case 'pushMessageContentVideoNote':
      return PushMessageContentVideoNote.fromJson(obj);
    case 'pushMessageContentVoiceNote':
      return PushMessageContentVoiceNote.fromJson(obj);
    case 'pushMessageContentBasicGroupChatCreate':
      return PushMessageContentBasicGroupChatCreate.fromJson(obj);
    case 'pushMessageContentChatAddMembers':
      return PushMessageContentChatAddMembers.fromJson(obj);
    case 'pushMessageContentChatChangePhoto':
      return PushMessageContentChatChangePhoto.fromJson(obj);
    case 'pushMessageContentChatChangeTitle':
      return PushMessageContentChatChangeTitle.fromJson(obj);
    case 'pushMessageContentChatDeleteMember':
      return PushMessageContentChatDeleteMember.fromJson(obj);
    case 'pushMessageContentChatJoinByLink':
      return PushMessageContentChatJoinByLink.fromJson(obj);
    case 'pushMessageContentMessageForwards':
      return PushMessageContentMessageForwards.fromJson(obj);
    case 'pushMessageContentMediaAlbum':
      return PushMessageContentMediaAlbum.fromJson(obj);

    case 'notificationTypeNewMessage':
      return NotificationTypeNewMessage.fromJson(obj);
    case 'notificationTypeNewSecretChat':
      return NotificationTypeNewSecretChat.fromJson(obj);
    case 'notificationTypeNewCall':
      return NotificationTypeNewCall.fromJson(obj);
    case 'notificationTypeNewPushMessage':
      return NotificationTypeNewPushMessage.fromJson(obj);

    case 'notificationGroupTypeMessages':
      return NotificationGroupTypeMessages.fromJson(obj);
    case 'notificationGroupTypeMentions':
      return NotificationGroupTypeMentions.fromJson(obj);
    case 'notificationGroupTypeSecretChat':
      return NotificationGroupTypeSecretChat.fromJson(obj);
    case 'notificationGroupTypeCalls':
      return NotificationGroupTypeCalls.fromJson(obj);
    case 'notification':
      return Notification.fromJson(obj);
    case 'notificationGroup':
      return NotificationGroup.fromJson(obj);

    case 'optionValueBoolean':
      return OptionValueBoolean.fromJson(obj);
    case 'optionValueEmpty':
      return OptionValueEmpty.fromJson(obj);
    case 'optionValueInteger':
      return OptionValueInteger.fromJson(obj);
    case 'optionValueString':
      return OptionValueString.fromJson(obj);
    case 'jsonObjectMember':
      return JsonObjectMember.fromJson(obj);

    case 'jsonValueNull':
      return JsonValueNull.fromJson(obj);
    case 'jsonValueBoolean':
      return JsonValueBoolean.fromJson(obj);
    case 'jsonValueNumber':
      return JsonValueNumber.fromJson(obj);
    case 'jsonValueString':
      return JsonValueString.fromJson(obj);
    case 'jsonValueArray':
      return JsonValueArray.fromJson(obj);
    case 'jsonValueObject':
      return JsonValueObject.fromJson(obj);

    case 'userPrivacySettingRuleAllowAll':
      return UserPrivacySettingRuleAllowAll.fromJson(obj);
    case 'userPrivacySettingRuleAllowContacts':
      return UserPrivacySettingRuleAllowContacts.fromJson(obj);
    case 'userPrivacySettingRuleAllowUsers':
      return UserPrivacySettingRuleAllowUsers.fromJson(obj);
    case 'userPrivacySettingRuleAllowChatMembers':
      return UserPrivacySettingRuleAllowChatMembers.fromJson(obj);
    case 'userPrivacySettingRuleRestrictAll':
      return UserPrivacySettingRuleRestrictAll.fromJson(obj);
    case 'userPrivacySettingRuleRestrictContacts':
      return UserPrivacySettingRuleRestrictContacts.fromJson(obj);
    case 'userPrivacySettingRuleRestrictUsers':
      return UserPrivacySettingRuleRestrictUsers.fromJson(obj);
    case 'userPrivacySettingRuleRestrictChatMembers':
      return UserPrivacySettingRuleRestrictChatMembers.fromJson(obj);
    case 'userPrivacySettingRules':
      return UserPrivacySettingRules.fromJson(obj);

    case 'userPrivacySettingShowStatus':
      return UserPrivacySettingShowStatus.fromJson(obj);
    case 'userPrivacySettingShowProfilePhoto':
      return UserPrivacySettingShowProfilePhoto.fromJson(obj);
    case 'userPrivacySettingShowLinkInForwardedMessages':
      return UserPrivacySettingShowLinkInForwardedMessages.fromJson(obj);
    case 'userPrivacySettingShowPhoneNumber':
      return UserPrivacySettingShowPhoneNumber.fromJson(obj);
    case 'userPrivacySettingAllowChatInvites':
      return UserPrivacySettingAllowChatInvites.fromJson(obj);
    case 'userPrivacySettingAllowCalls':
      return UserPrivacySettingAllowCalls.fromJson(obj);
    case 'userPrivacySettingAllowPeerToPeerCalls':
      return UserPrivacySettingAllowPeerToPeerCalls.fromJson(obj);
    case 'userPrivacySettingAllowFindingByPhoneNumber':
      return UserPrivacySettingAllowFindingByPhoneNumber.fromJson(obj);
    case 'accountTtl':
      return AccountTtl.fromJson(obj);
    case 'session':
      return Session.fromJson(obj);
    case 'sessions':
      return Sessions.fromJson(obj);
    case 'connectedWebsite':
      return ConnectedWebsite.fromJson(obj);
    case 'connectedWebsites':
      return ConnectedWebsites.fromJson(obj);

    case 'chatReportReasonSpam':
      return ChatReportReasonSpam.fromJson(obj);
    case 'chatReportReasonViolence':
      return ChatReportReasonViolence.fromJson(obj);
    case 'chatReportReasonPornography':
      return ChatReportReasonPornography.fromJson(obj);
    case 'chatReportReasonChildAbuse':
      return ChatReportReasonChildAbuse.fromJson(obj);
    case 'chatReportReasonCopyright':
      return ChatReportReasonCopyright.fromJson(obj);
    case 'chatReportReasonUnrelatedLocation':
      return ChatReportReasonUnrelatedLocation.fromJson(obj);
    case 'chatReportReasonFake':
      return ChatReportReasonFake.fromJson(obj);
    case 'chatReportReasonCustom':
      return ChatReportReasonCustom.fromJson(obj);

    case 'internalLinkTypeActiveSessions':
      return InternalLinkTypeActiveSessions.fromJson(obj);
    case 'internalLinkTypeAuthenticationCode':
      return InternalLinkTypeAuthenticationCode.fromJson(obj);
    case 'internalLinkTypeBackground':
      return InternalLinkTypeBackground.fromJson(obj);
    case 'internalLinkTypeBotStart':
      return InternalLinkTypeBotStart.fromJson(obj);
    case 'internalLinkTypeBotStartInGroup':
      return InternalLinkTypeBotStartInGroup.fromJson(obj);
    case 'internalLinkTypeChangePhoneNumber':
      return InternalLinkTypeChangePhoneNumber.fromJson(obj);
    case 'internalLinkTypeChatInvite':
      return InternalLinkTypeChatInvite.fromJson(obj);
    case 'internalLinkTypeFilterSettings':
      return InternalLinkTypeFilterSettings.fromJson(obj);
    case 'internalLinkTypeGame':
      return InternalLinkTypeGame.fromJson(obj);
    case 'internalLinkTypeLanguagePack':
      return InternalLinkTypeLanguagePack.fromJson(obj);
    case 'internalLinkTypeMessage':
      return InternalLinkTypeMessage.fromJson(obj);
    case 'internalLinkTypeMessageDraft':
      return InternalLinkTypeMessageDraft.fromJson(obj);
    case 'internalLinkTypePassportDataRequest':
      return InternalLinkTypePassportDataRequest.fromJson(obj);
    case 'internalLinkTypePhoneNumberConfirmation':
      return InternalLinkTypePhoneNumberConfirmation.fromJson(obj);
    case 'internalLinkTypeProxy':
      return InternalLinkTypeProxy.fromJson(obj);
    case 'internalLinkTypePublicChat':
      return InternalLinkTypePublicChat.fromJson(obj);
    case 'internalLinkTypeQrCodeAuthentication':
      return InternalLinkTypeQrCodeAuthentication.fromJson(obj);
    case 'internalLinkTypeSettings':
      return InternalLinkTypeSettings.fromJson(obj);
    case 'internalLinkTypeStickerSet':
      return InternalLinkTypeStickerSet.fromJson(obj);
    case 'internalLinkTypeTheme':
      return InternalLinkTypeTheme.fromJson(obj);
    case 'internalLinkTypeThemeSettings':
      return InternalLinkTypeThemeSettings.fromJson(obj);
    case 'internalLinkTypeUnknownDeepLink':
      return InternalLinkTypeUnknownDeepLink.fromJson(obj);
    case 'internalLinkTypeVoiceChat':
      return InternalLinkTypeVoiceChat.fromJson(obj);
    case 'messageLink':
      return MessageLink.fromJson(obj);
    case 'messageLinkInfo':
      return MessageLinkInfo.fromJson(obj);
    case 'filePart':
      return FilePart.fromJson(obj);

    case 'fileTypeNone':
      return FileTypeNone.fromJson(obj);
    case 'fileTypeAnimation':
      return FileTypeAnimation.fromJson(obj);
    case 'fileTypeAudio':
      return FileTypeAudio.fromJson(obj);
    case 'fileTypeDocument':
      return FileTypeDocument.fromJson(obj);
    case 'fileTypePhoto':
      return FileTypePhoto.fromJson(obj);
    case 'fileTypeProfilePhoto':
      return FileTypeProfilePhoto.fromJson(obj);
    case 'fileTypeSecret':
      return FileTypeSecret.fromJson(obj);
    case 'fileTypeSecretThumbnail':
      return FileTypeSecretThumbnail.fromJson(obj);
    case 'fileTypeSecure':
      return FileTypeSecure.fromJson(obj);
    case 'fileTypeSticker':
      return FileTypeSticker.fromJson(obj);
    case 'fileTypeThumbnail':
      return FileTypeThumbnail.fromJson(obj);
    case 'fileTypeUnknown':
      return FileTypeUnknown.fromJson(obj);
    case 'fileTypeVideo':
      return FileTypeVideo.fromJson(obj);
    case 'fileTypeVideoNote':
      return FileTypeVideoNote.fromJson(obj);
    case 'fileTypeVoiceNote':
      return FileTypeVoiceNote.fromJson(obj);
    case 'fileTypeWallpaper':
      return FileTypeWallpaper.fromJson(obj);
    case 'storageStatisticsByFileType':
      return StorageStatisticsByFileType.fromJson(obj);
    case 'storageStatisticsByChat':
      return StorageStatisticsByChat.fromJson(obj);
    case 'storageStatistics':
      return StorageStatistics.fromJson(obj);
    case 'storageStatisticsFast':
      return StorageStatisticsFast.fromJson(obj);
    case 'databaseStatistics':
      return DatabaseStatistics.fromJson(obj);

    case 'networkTypeNone':
      return NetworkTypeNone.fromJson(obj);
    case 'networkTypeMobile':
      return NetworkTypeMobile.fromJson(obj);
    case 'networkTypeMobileRoaming':
      return NetworkTypeMobileRoaming.fromJson(obj);
    case 'networkTypeWiFi':
      return NetworkTypeWiFi.fromJson(obj);
    case 'networkTypeOther':
      return NetworkTypeOther.fromJson(obj);

    case 'networkStatisticsEntryFile':
      return NetworkStatisticsEntryFile.fromJson(obj);
    case 'networkStatisticsEntryCall':
      return NetworkStatisticsEntryCall.fromJson(obj);
    case 'networkStatistics':
      return NetworkStatistics.fromJson(obj);
    case 'autoDownloadSettings':
      return AutoDownloadSettings.fromJson(obj);
    case 'autoDownloadSettingsPresets':
      return AutoDownloadSettingsPresets.fromJson(obj);

    case 'connectionStateWaitingForNetwork':
      return ConnectionStateWaitingForNetwork.fromJson(obj);
    case 'connectionStateConnectingToProxy':
      return ConnectionStateConnectingToProxy.fromJson(obj);
    case 'connectionStateConnecting':
      return ConnectionStateConnecting.fromJson(obj);
    case 'connectionStateUpdating':
      return ConnectionStateUpdating.fromJson(obj);
    case 'connectionStateReady':
      return ConnectionStateReady.fromJson(obj);

    case 'topChatCategoryUsers':
      return TopChatCategoryUsers.fromJson(obj);
    case 'topChatCategoryBots':
      return TopChatCategoryBots.fromJson(obj);
    case 'topChatCategoryGroups':
      return TopChatCategoryGroups.fromJson(obj);
    case 'topChatCategoryChannels':
      return TopChatCategoryChannels.fromJson(obj);
    case 'topChatCategoryInlineBots':
      return TopChatCategoryInlineBots.fromJson(obj);
    case 'topChatCategoryCalls':
      return TopChatCategoryCalls.fromJson(obj);
    case 'topChatCategoryForwardChats':
      return TopChatCategoryForwardChats.fromJson(obj);

    case 'tMeUrlTypeUser':
      return TMeUrlTypeUser.fromJson(obj);
    case 'tMeUrlTypeSupergroup':
      return TMeUrlTypeSupergroup.fromJson(obj);
    case 'tMeUrlTypeChatInvite':
      return TMeUrlTypeChatInvite.fromJson(obj);
    case 'tMeUrlTypeStickerSet':
      return TMeUrlTypeStickerSet.fromJson(obj);
    case 'tMeUrl':
      return TMeUrl.fromJson(obj);
    case 'tMeUrls':
      return TMeUrls.fromJson(obj);

    case 'suggestedActionEnableArchiveAndMuteNewChats':
      return SuggestedActionEnableArchiveAndMuteNewChats.fromJson(obj);
    case 'suggestedActionCheckPassword':
      return SuggestedActionCheckPassword.fromJson(obj);
    case 'suggestedActionCheckPhoneNumber':
      return SuggestedActionCheckPhoneNumber.fromJson(obj);
    case 'suggestedActionSeeTicksHint':
      return SuggestedActionSeeTicksHint.fromJson(obj);
    case 'suggestedActionConvertToBroadcastGroup':
      return SuggestedActionConvertToBroadcastGroup.fromJson(obj);
    case 'count':
      return Count.fromJson(obj);
    case 'text':
      return Text.fromJson(obj);
    case 'seconds':
      return Seconds.fromJson(obj);
    case 'deepLinkInfo':
      return DeepLinkInfo.fromJson(obj);

    case 'textParseModeMarkdown':
      return TextParseModeMarkdown.fromJson(obj);
    case 'textParseModeHTML':
      return TextParseModeHTML.fromJson(obj);

    case 'proxyTypeSocks5':
      return ProxyTypeSocks5.fromJson(obj);
    case 'proxyTypeHttp':
      return ProxyTypeHttp.fromJson(obj);
    case 'proxyTypeMtproto':
      return ProxyTypeMtproto.fromJson(obj);
    case 'proxy':
      return Proxy.fromJson(obj);
    case 'proxies':
      return Proxies.fromJson(obj);

    case 'inputStickerStatic':
      return InputStickerStatic.fromJson(obj);
    case 'inputStickerAnimated':
      return InputStickerAnimated.fromJson(obj);
    case 'dateRange':
      return DateRange.fromJson(obj);
    case 'statisticalValue':
      return StatisticalValue.fromJson(obj);

    case 'statisticalGraphData':
      return StatisticalGraphData.fromJson(obj);
    case 'statisticalGraphAsync':
      return StatisticalGraphAsync.fromJson(obj);
    case 'statisticalGraphError':
      return StatisticalGraphError.fromJson(obj);
    case 'chatStatisticsMessageInteractionInfo':
      return ChatStatisticsMessageInteractionInfo.fromJson(obj);
    case 'chatStatisticsMessageSenderInfo':
      return ChatStatisticsMessageSenderInfo.fromJson(obj);
    case 'chatStatisticsAdministratorActionsInfo':
      return ChatStatisticsAdministratorActionsInfo.fromJson(obj);
    case 'chatStatisticsInviterInfo':
      return ChatStatisticsInviterInfo.fromJson(obj);

    case 'chatStatisticsSupergroup':
      return ChatStatisticsSupergroup.fromJson(obj);
    case 'chatStatisticsChannel':
      return ChatStatisticsChannel.fromJson(obj);
    case 'messageStatistics':
      return MessageStatistics.fromJson(obj);
    case 'point':
      return Point.fromJson(obj);

    case 'vectorPathCommandLine':
      return VectorPathCommandLine.fromJson(obj);
    case 'vectorPathCommandCubicBezierCurve':
      return VectorPathCommandCubicBezierCurve.fromJson(obj);

    case 'botCommandScopeDefault':
      return BotCommandScopeDefault.fromJson(obj);
    case 'botCommandScopeAllPrivateChats':
      return BotCommandScopeAllPrivateChats.fromJson(obj);
    case 'botCommandScopeAllGroupChats':
      return BotCommandScopeAllGroupChats.fromJson(obj);
    case 'botCommandScopeAllChatAdministrators':
      return BotCommandScopeAllChatAdministrators.fromJson(obj);
    case 'botCommandScopeChat':
      return BotCommandScopeChat.fromJson(obj);
    case 'botCommandScopeChatAdministrators':
      return BotCommandScopeChatAdministrators.fromJson(obj);
    case 'botCommandScopeChatMember':
      return BotCommandScopeChatMember.fromJson(obj);

    case 'updateAuthorizationState':
      return UpdateAuthorizationState.fromJson(obj);
    case 'updateNewMessage':
      return UpdateNewMessage.fromJson(obj);
    case 'updateMessageSendAcknowledged':
      return UpdateMessageSendAcknowledged.fromJson(obj);
    case 'updateMessageSendSucceeded':
      return UpdateMessageSendSucceeded.fromJson(obj);
    case 'updateMessageSendFailed':
      return UpdateMessageSendFailed.fromJson(obj);
    case 'updateMessageContent':
      return UpdateMessageContent.fromJson(obj);
    case 'updateMessageEdited':
      return UpdateMessageEdited.fromJson(obj);
    case 'updateMessageIsPinned':
      return UpdateMessageIsPinned.fromJson(obj);
    case 'updateMessageInteractionInfo':
      return UpdateMessageInteractionInfo.fromJson(obj);
    case 'updateMessageContentOpened':
      return UpdateMessageContentOpened.fromJson(obj);
    case 'updateMessageMentionRead':
      return UpdateMessageMentionRead.fromJson(obj);
    case 'updateMessageLiveLocationViewed':
      return UpdateMessageLiveLocationViewed.fromJson(obj);
    case 'updateNewChat':
      return UpdateNewChat.fromJson(obj);
    case 'updateChatTitle':
      return UpdateChatTitle.fromJson(obj);
    case 'updateChatPhoto':
      return UpdateChatPhoto.fromJson(obj);
    case 'updateChatPermissions':
      return UpdateChatPermissions.fromJson(obj);
    case 'updateChatLastMessage':
      return UpdateChatLastMessage.fromJson(obj);
    case 'updateChatPosition':
      return UpdateChatPosition.fromJson(obj);
    case 'updateChatIsMarkedAsUnread':
      return UpdateChatIsMarkedAsUnread.fromJson(obj);
    case 'updateChatIsBlocked':
      return UpdateChatIsBlocked.fromJson(obj);
    case 'updateChatHasScheduledMessages':
      return UpdateChatHasScheduledMessages.fromJson(obj);
    case 'updateChatVoiceChat':
      return UpdateChatVoiceChat.fromJson(obj);
    case 'updateChatDefaultDisableNotification':
      return UpdateChatDefaultDisableNotification.fromJson(obj);
    case 'updateChatReadInbox':
      return UpdateChatReadInbox.fromJson(obj);
    case 'updateChatReadOutbox':
      return UpdateChatReadOutbox.fromJson(obj);
    case 'updateChatUnreadMentionCount':
      return UpdateChatUnreadMentionCount.fromJson(obj);
    case 'updateChatNotificationSettings':
      return UpdateChatNotificationSettings.fromJson(obj);
    case 'updateScopeNotificationSettings':
      return UpdateScopeNotificationSettings.fromJson(obj);
    case 'updateChatMessageTtlSetting':
      return UpdateChatMessageTtlSetting.fromJson(obj);
    case 'updateChatActionBar':
      return UpdateChatActionBar.fromJson(obj);
    case 'updateChatReplyMarkup':
      return UpdateChatReplyMarkup.fromJson(obj);
    case 'updateChatDraftMessage':
      return UpdateChatDraftMessage.fromJson(obj);
    case 'updateChatFilters':
      return UpdateChatFilters.fromJson(obj);
    case 'updateChatOnlineMemberCount':
      return UpdateChatOnlineMemberCount.fromJson(obj);
    case 'updateNotification':
      return UpdateNotification.fromJson(obj);
    case 'updateNotificationGroup':
      return UpdateNotificationGroup.fromJson(obj);
    case 'updateActiveNotifications':
      return UpdateActiveNotifications.fromJson(obj);
    case 'updateHavePendingNotifications':
      return UpdateHavePendingNotifications.fromJson(obj);
    case 'updateDeleteMessages':
      return UpdateDeleteMessages.fromJson(obj);
    case 'updateUserChatAction':
      return UpdateUserChatAction.fromJson(obj);
    case 'updateUserStatus':
      return UpdateUserStatus.fromJson(obj);
    case 'updateUser':
      return UpdateUser.fromJson(obj);
    case 'updateBasicGroup':
      return UpdateBasicGroup.fromJson(obj);
    case 'updateSupergroup':
      return UpdateSupergroup.fromJson(obj);
    case 'updateSecretChat':
      return UpdateSecretChat.fromJson(obj);
    case 'updateUserFullInfo':
      return UpdateUserFullInfo.fromJson(obj);
    case 'updateBasicGroupFullInfo':
      return UpdateBasicGroupFullInfo.fromJson(obj);
    case 'updateSupergroupFullInfo':
      return UpdateSupergroupFullInfo.fromJson(obj);
    case 'updateServiceNotification':
      return UpdateServiceNotification.fromJson(obj);
    case 'updateFile':
      return UpdateFile.fromJson(obj);
    case 'updateFileGenerationStart':
      return UpdateFileGenerationStart.fromJson(obj);
    case 'updateFileGenerationStop':
      return UpdateFileGenerationStop.fromJson(obj);
    case 'updateCall':
      return UpdateCall.fromJson(obj);
    case 'updateGroupCall':
      return UpdateGroupCall.fromJson(obj);
    case 'updateGroupCallParticipant':
      return UpdateGroupCallParticipant.fromJson(obj);
    case 'updateNewCallSignalingData':
      return UpdateNewCallSignalingData.fromJson(obj);
    case 'updateUserPrivacySettingRules':
      return UpdateUserPrivacySettingRules.fromJson(obj);
    case 'updateUnreadMessageCount':
      return UpdateUnreadMessageCount.fromJson(obj);
    case 'updateUnreadChatCount':
      return UpdateUnreadChatCount.fromJson(obj);
    case 'updateOption':
      return UpdateOption.fromJson(obj);
    case 'updateStickerSet':
      return UpdateStickerSet.fromJson(obj);
    case 'updateInstalledStickerSets':
      return UpdateInstalledStickerSets.fromJson(obj);
    case 'updateTrendingStickerSets':
      return UpdateTrendingStickerSets.fromJson(obj);
    case 'updateRecentStickers':
      return UpdateRecentStickers.fromJson(obj);
    case 'updateFavoriteStickers':
      return UpdateFavoriteStickers.fromJson(obj);
    case 'updateSavedAnimations':
      return UpdateSavedAnimations.fromJson(obj);
    case 'updateSelectedBackground':
      return UpdateSelectedBackground.fromJson(obj);
    case 'updateLanguagePackStrings':
      return UpdateLanguagePackStrings.fromJson(obj);
    case 'updateConnectionState':
      return UpdateConnectionState.fromJson(obj);
    case 'updateTermsOfService':
      return UpdateTermsOfService.fromJson(obj);
    case 'updateUsersNearby':
      return UpdateUsersNearby.fromJson(obj);
    case 'updateDiceEmojis':
      return UpdateDiceEmojis.fromJson(obj);
    case 'updateAnimationSearchParameters':
      return UpdateAnimationSearchParameters.fromJson(obj);
    case 'updateSuggestedActions':
      return UpdateSuggestedActions.fromJson(obj);
    case 'updateNewInlineQuery':
      return UpdateNewInlineQuery.fromJson(obj);
    case 'updateNewChosenInlineResult':
      return UpdateNewChosenInlineResult.fromJson(obj);
    case 'updateNewCallbackQuery':
      return UpdateNewCallbackQuery.fromJson(obj);
    case 'updateNewInlineCallbackQuery':
      return UpdateNewInlineCallbackQuery.fromJson(obj);
    case 'updateNewShippingQuery':
      return UpdateNewShippingQuery.fromJson(obj);
    case 'updateNewPreCheckoutQuery':
      return UpdateNewPreCheckoutQuery.fromJson(obj);
    case 'updateNewCustomEvent':
      return UpdateNewCustomEvent.fromJson(obj);
    case 'updateNewCustomQuery':
      return UpdateNewCustomQuery.fromJson(obj);
    case 'updatePoll':
      return UpdatePoll.fromJson(obj);
    case 'updatePollAnswer':
      return UpdatePollAnswer.fromJson(obj);
    case 'updateChatMember':
      return UpdateChatMember.fromJson(obj);
    case 'updates':
      return Updates.fromJson(obj);

    case 'logStreamDefault':
      return LogStreamDefault.fromJson(obj);
    case 'logStreamFile':
      return LogStreamFile.fromJson(obj);
    case 'logStreamEmpty':
      return LogStreamEmpty.fromJson(obj);
    case 'logVerbosityLevel':
      return LogVerbosityLevel.fromJson(obj);
    case 'logTags':
      return LogTags.fromJson(obj);
    case 'testInt':
      return TestInt.fromJson(obj);
    case 'testString':
      return TestString.fromJson(obj);
    case 'testBytes':
      return TestBytes.fromJson(obj);
    case 'testVectorInt':
      return TestVectorInt.fromJson(obj);
    case 'testVectorIntObject':
      return TestVectorIntObject.fromJson(obj);
    case 'testVectorString':
      return TestVectorString.fromJson(obj);
    case 'testVectorStringObject':
      return TestVectorStringObject.fromJson(obj);
    default:
      throw UnconvertableObjectException(objTypeName);
  }
}